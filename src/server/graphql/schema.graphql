schema {
  query: Query
}

type Movie implements Node {
  id: ID!
  labels: [String]
  uuid: String
  createdAt: Float
  updatedAt: Float
  title: String
  description: String
  language: String
  imageUrl: String
  trailer: String
  genre: String
  tagline: String
  homepage: String
  imdbId: String
  studio: String
  releaseDate: Float
  runtime: Int
  version: Int
}

type MovieConnection {
  pageInfo: PageInfo!
  edges: [MovieEdge]
}

type MovieEdge {
  node: Movie
  cursor: String!
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  viewer: Viewer
  node(id: ID!): Node
}

type Viewer implements Node {
  id: ID!
  movie(uuid: String!): Movie
  movies(after: String, first: Int, before: String, last: Int): MovieConnection
}
